# psql method to connect to production database "psql -U postgresCalendso -h postgresprod.cekbtf0hdtum.ap-south-1.rds.amazonaws.com -p 5432 -d postgres"
# password "#indywise123"

DATABASE_URL="postgresql://postgresCalendso:%23indywise123@postgresprod.cekbtf0hdtum.ap-south-1.rds.amazonaws.com:5432/postgres"
GOOGLE_API_CREDENTIALS={"web":{"client_id":"20957776680-kriiokf2iud4sg036ebro9ek02fvir3g.apps.googleusercontent.com","project_id":"sacred-lane-322616","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"wXqyswgifZhTYnk4neHIJjhT","redirect_uris":["https://calendso-prod.azurewebsites.net/api/integrations/googlecalendar/callback","https://calendso-dev.azurewebsites.net/api/integrations/googlecalendar/callback"]}}
# BASE_URL=https://calendso-dev.azurewebsites.net
BASE_URL=https://calendso-prod.azurewebsites.net
NEXT_PUBLIC_APP_URL=https://calendso-prod.azurewebsites.net
JWT_SECRET='secret'

# @see: https://github.com/calendso/calendso/issues/263
# Required for Vercel hosting - set NEXTAUTH_URL to equal your BASE_URL
NEXTAUTH_URL=https://calendso-prod.azurewebsites.net

# Remove this var if you don't want Calendso to collect anonymous usage
NEXT_PUBLIC_TELEMETRY_KEY=js.2pvs2bbpqq1zxna97wcml.oi2jzirnbj1ev4tc57c5r

# Used for the Office 365 / Outlook.com Calendar integration
MS_GRAPH_CLIENT_ID=ad6e0c53-b181-46bb-9346-7232d5834dd5
MS_GRAPH_CLIENT_SECRET=x1L5f_RsybD-3RNk~9a8hq--jk_QzytR69

# Used for the Zoom integration
ZOOM_CLIENT_ID=
ZOOM_CLIENT_SECRET=

# E-mail settings

# Calendso uses nodemailer (@see https://nodemailer.com/about/) to provide email sending. As such we are trying to
# allow access to the nodemailer transports from the .env file. E-mail templates are accessible within lib/emails/

# Configures the global From: header whilst sending emails.
EMAIL_FROM='notifications@yourselfhostedcalendso.com'

# Configure SMTP settings (@see https://nodemailer.com/smtp/).
# Note: The below configuration for Office 365 has been verified to work.
EMAIL_SERVER_HOST='smtp.office365.com'
EMAIL_SERVER_PORT=587
EMAIL_SERVER_USER='<office365_emailAddress>'
# Keep in mind that if you have 2FA enabled, you will need to provision an App Password.
EMAIL_SERVER_PASSWORD='<office365_password>'
# ApiKey for cronjobs
CRON_API_KEY='0cc0e6c35519bba620c9360cfe3e68d0'

# Application Key for symmetric encryption and decryption
# must be 32 bytes for AES256 encryption algorithm
CALENDSO_ENCRYPTION_KEY=
